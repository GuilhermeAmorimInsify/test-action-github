name: 'Auto-Update To Auto-Merge'
on:
  push:
    branches:
      - 'main'
      - 'master'
      - 'master-mre'
  schedule:
    # in case the previous trigger fails for some reason and there's no one to see.
    - cron: '*/60 * * * *'
jobs:
  update-pr-branches:
    runs-on: self-hosted
    steps:
      - name: Update all PRs marked to auto-merge
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            // Get all the PRs in the repository
            const pr_list = (await github.rest.pulls.list({
              owner,
              repo
            })).data;
            // Filter only the ones that are on auto-merge
            const auto_merge_prs = pr_list.filter(pr => pr.auto_merge !== null);
            // print out some statistics for debug
            console.log('PR count:');
            console.log(pr_list.length);
            console.log('Of which these are on auto-merge:')
            console.log(auto_merge_prs.length);
            // iterate through the interesting PRs
            for (const pr of auto_merge_prs) {
              const user = pr.user.login;
              // TODO check if the PR needs updating, skip
              // TODO check the checks and let the user know of any issues, skip
              // TODO check if passed all reviews, skip
              // TODO check if the no-auto-update tag is added
              // Checking if this has the "no-auto-update label"
              const no_update_label = await github.rest.issues.getLabel({
                owner,
                repo,
                'no-auto-update'
              }).status;
              if (no_update_label === 200) {
                console.log(`The "${pr.title}" was marked to not be updated automatically, skipping.`);
                continue;
              }
              // debug messages
              console.log(`Updating "${pr.title}", ${user} will be happy!`);
              // update pr branch
              const update_result = await github.rest.pulls.updateBranch({
                owner,
                repo,
                pull_number: pr.number
              });
              // outputs a message based on the status...
              switch(update_result.status) {
                case 202: 
                  console.log("YES! The PR was updated successfully. The message was...");
                  await github.rest.issues.createComment({ 
                    owner,
                    repo,
                    issue_number: pr.number,
                    body: `Hey @${user}, just so you know, I've updated your branch, hope this helps. If you don't like it, add the "no-auto-update" label to this PR and I won't do it again for this PR.`
                  });
                  break;
                case 403: 
                  console.log("Darn! Seems like I don't have permissions? The message was...");
                  break;
                case 422: 
                  console.log("Oops, I've have requested too many times. The message was...");
                  break;
              }
              console.log(update_result.data.message);
            }


